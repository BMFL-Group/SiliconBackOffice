@page "/courses"

@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Courses</PageTitle>

<section class="courses">
    <div class="container-test">
        <div class="text-center">
            <h1>Courses Management</h1>
            <p class="lead">Manage courses, descriptions, content, and categories.</p>
        </div>

        <table class="table table-hover mt-4 courses-aside">
            <thead class="thead-dark">
                <tr>
                   @*  <th scope="col">ID</th> *@
                    <th scope="col">Course Name</th>
                    @* <th scope="col">Description</th>
                    <th scope="col">Includes</th>
                    <th scope="col">Category</th>
                    <th scope="col">Content</th>
                    <th scope="col">Actions</th> *@
                </tr>
            </thead>
            <tbody>
                @if (_courses == null)
                {
                    <div>Loading...</div>
                }
                else
                {
                    @foreach (var course in _courses)
                    {
                        <tr>
                            @* <td>@course.Id</td> *@
                            <td>@course.Title</td>
                            @* <td>@course.ProgramDetails</td> *@
                            @* <td>@course.Content.Description</td> *@
                           @*  @foreach (var category in _categories)
                            {
                                <td>@course.Categories</td>
                            } *@
                            <td>@course.Content</td>
                            <td>
                                <button class="btn btn-sm btn-primary" @onclick="() => EditCourse(course)">View/Edit</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteCourse(course)">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <_CoursesBox _course="_courseById" />

        <_CoursesForm _course="_courseById" />

    </div>
</section>

@code {
    private IEnumerable<Course> _courses { get; set; } = [];
    private Course? _courseById { get; set; }
    private IEnumerable<CategoryModel> _categories { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var result = await _courseService.GetAllCoursesAsync("", "", 1, 9);

        _courses = result.Courses;
    }

    private async Task EditCourse(Course course)
    {
        var result = await _courseService.GetOneCourseByIdAsync(course.Id);
        if (result != null)
        {
            _courseById = result;
        }
    }

    private void DeleteCourse(Course course)
    {

        //courses.Remove(course);
    }
}
